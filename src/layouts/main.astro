---
import { Toaster } from '@/components/ui/sonner'
import '../styles/global.css'

type TitleTemplate = (title?: string) => string

interface Props {
  title?: string
  titleTemplate?: TitleTemplate
  description?: string
}

const defaultTitleTemplate: TitleTemplate = (title) => (title ? `${title} | Luis Emidio` : 'Luis Emidio')

const { title, titleTemplate = defaultTitleTemplate, description }: Props = Astro.props
---

<!-- Dark mode toggle -->
<script is:inline>
  function getThemePreference() {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme')
    }
    return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'
  }
  const isDark = getThemePreference() === 'dark'
  document.documentElement.classList[isDark ? 'add' : 'remove']('dark')

  if (typeof localStorage !== 'undefined') {
    const observer = new MutationObserver(() => {
      const isDark = document.documentElement.classList.contains('dark')
      localStorage.setItem('theme', isDark ? 'dark' : 'light')
    })
    observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] })
  }
</script>

<script>
  function updateSVGViewBox() {
    const svgs = document.querySelectorAll('svg.w-fitbbox')
    svgs.forEach((element) => {
      const bbox = element.querySelector('text')?.getBBox()
      if (bbox) {
        // Read the fitbox adjustment value from data-fitbbox, default to 1.5 if not set
        const wa = Number.parseFloat(element.getAttribute('data-fitbbox-wa') ?? '0')
        const ha = Number.parseFloat(element.getAttribute('data-fitbbox-ha') ?? '0')
        element.setAttribute('viewBox', [bbox.x, bbox.y, bbox.width - wa, bbox.height - ha].join(' '))
      }
    })
  }

  // Initial update
  updateSVGViewBox()

  // Update on resize for responsiveness
  window.addEventListener('resize', updateSVGViewBox)

  // Optional: update on font load (for custom fonts)
  if (document.fonts && document.fonts.ready) {
    document.fonts.ready.then(updateSVGViewBox)
  }
</script>

<html lang="en" class="font-sans">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />

    <link rel="icon" type="image/png" href="/favicon/favicon-96x96.png" sizes="96x96" />
    <link rel="icon" type="image/svg+xml" href="/favicon/favicon.svg" />
    <link rel="shortcut icon" href="/favicon/favicon.ico" />
    <link rel="apple-touch-icon" sizes="180x180" href="/favicon/apple-touch-icon.png" />
    <meta name="apple-mobile-web-app-title" content="Luis emidio" />
    <link rel="manifest" href="/favicon/site.webmanifest" />

    <meta name="generator" content={Astro.generator} />
    <title>{titleTemplate(title)}</title>
    <meta name="description" content={description} />

    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&family=Roboto+Flex:opsz,wght@8..144,100..1000&family=Roboto+Mono:ital,wght@0,100..700;1,100..700&family=Roboto:ital,wght@0,100..900;1,100..900&display=swap"
      rel="stylesheet"
    />
  </head>
  <body>
    <slot />

    <Toaster client:idle />
  </body>
</html>

<style is:global>
  svg.w-fitbbox {
    width: 100%;
    fill: currentColor;
  }
</style>
